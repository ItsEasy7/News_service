version: '3.8'

services:
  postgres:
    image: dockerhub.timeweb.cloud/postgres:16.2
    container_name: postgres
    restart: always
    env_file: ../.env
    ports:
      - "5432:5432"
    volumes:
      - "$HOME/docker/volumes/postgres:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -U postgres -d news_service_database
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
        - yurtarb_yurtarb

  pgadmin:
    image: docker.io/dpage/pgadmin4:latest
    container_name: pgadmin
    env_file: ../.env
    ports: 
      - 15432:80 
    depends_on: 
      - postgres 
    networks: 
        - yurtarb_yurtarb
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  news-service:
    build:
      context: ..
      dockerfile: build/Dockerfile
    env_file: ../.env
    container_name: news
    ports:
      - "8080:8080"
    expose:
      - 8080
    depends_on:
      postgres:
        condition: service_healthy
      # rabbitmq:
      #   condition: service_started
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - yurtarb_yurtarb

volumes:
  postgres_data:
    driver: local
    name: postgres_data
    
networks:
  yurtarb_yurtarb:
    name: yurtarb_yurtarb
    driver: bridge 
  internet:
    name: internet
    driver: bridge